name: ci-cd-pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  pull-requests: write

jobs:
  comment-pr-start:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Comment PR Start
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: CI/CD en acción. Ejecutando tareas ...
          reactions: rocket

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest tests/test_prediction.py -v

  comment-pr-success:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: run-tests
    steps:
      - name: Comment PR Success
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: CI/CD terminado con éxito
          reactions: hooray

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: run-tests
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}